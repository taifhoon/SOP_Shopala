{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/taifh/Desktop/SOP_Shopala/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import router from '@/router';\nimport axios from \"@/plugins/axios\";\nexport default {\n  name: \"app\",\n  props: [\"user\"],\n  data: function data() {\n    return {\n      sellerId: \"\",\n      sellerOrders: [],\n      orders: [],\n      products: [],\n      customers: [],\n      orderWithProduct: [] // paid: [],\n      // wait: [],\n      // ticket: [],\n      // cancleModal: false,\n      // ticketModal: false,\n\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:8002/getOrders\").then(function (res) {\n                  _this.orders = res.data;\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 2:\n                _context.next = 4;\n                return axios.get(\"http://localhost:8001/getProducts\").then(function (res) {\n                  _this.products = res.data;\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 4:\n                _context.next = 6;\n                return axios.get(\"http://localhost:8003/getCustomers\").then(function (res) {\n                  _this.customers = res.data;\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 6:\n                _this.filterOrders();\n\n                _this.sellerId = localStorage.getItem(\"sellerId\");\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    filterOrders: function filterOrders() {\n      var _this2 = this;\n\n      // console.log(this.orders)\n      this.orders.forEach(function (order) {\n        _this2.products.forEach(function (product) {\n          order.type.forEach(function (type) {\n            if (type.productId == product._id) {\n              type.productId = product;\n            }\n          });\n        });\n      });\n      this.orders.forEach(function (order) {\n        order.type.forEach(function (type) {\n          console.log(type.productId.sellerId);\n\n          if (type.productId.sellerId == _this2.sellerId) {\n            console.log(type.productId.sellerId);\n          }\n        });\n      });\n    },\n    getCustomerById: function getCustomerById(id) {\n      var name;\n      this.customers.forEach(function (item) {\n        if (item._id == id) {\n          name = item.name;\n        }\n      });\n      return name;\n    }\n  } // components: { router }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AAEA;AACA;AACAA,aADA;AAEAC,iBAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,kBADA;AAEAC,sBAFA;AAGAC,gBAHA;AAIAC,kBAJA;AAKAC,mBALA;AAMAC,0BANA,CAOA;AACA;AACA;AACA;AACA;;AAXA;AAaA,GAjBA;AAkBAC,SAlBA,qBAkBA;AACA;AACA,GApBA;AAqBAC;AACAC,WADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC,MACAC,GADA,oCAEAC,IAFA,CAEA;AACA;AACA,iBAJA,EAKAC,KALA,CAKA;AACAC;AACA,iBAPA,CADA;;AAAA;AAAA;AAAA,uBASAJ,MACAC,GADA,sCAEAC,IAFA,CAEA;AACA;AACA,iBAJA,EAKAC,KALA,CAKA;AACAC;AACA,iBAPA,CATA;;AAAA;AAAA;AAAA,uBAiBAJ,MACAC,GADA,uCAEAC,IAFA,CAEA;AACA;AACA,iBAJA,EAKAC,KALA,CAKA;AACAC;AACA,iBAPA,CAjBA;;AAAA;AAyBA;;AACA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA,KA5BA;AA6BAC,gBA7BA,0BA6BA;AAAA;;AACA;AACA;AACA;AACAC;AACA;AACAC;AACA;AACA,WAJA;AAKA,SANA;AAOA,OARA;AASA;AACAD;AACAE;;AACA;AACAA;AACA;AACA,SALA;AAMA,OAPA;AAQA,KAhDA;AAiDAC,mBAjDA,2BAiDAC,EAjDA,EAiDA;AACA;AACA;AACA;AACAtB;AACA;AACA,OAJA;AAKA;AAEA;AA1DA,GArBA,CAiFA;;AAjFA","names":["name","props","data","sellerId","sellerOrders","orders","products","customers","orderWithProduct","mounted","methods","getData","axios","get","then","catch","alert","filterOrders","order","type","console","getCustomerById","id"],"sourceRoot":"src/views","sources":["SellerOrder.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"container is-widescreen\">\r\n        <router-link class=\"has-text-dark\" id='button' to=\"/seller/home\">\r\n            <div class=\"arrow\">\r\n                <img class=\"imgarrow\"\r\n                    src=\"https://cdn.discordapp.com/attachments/1033283242121498625/1055543133351448678/arrow-left.png\"\r\n                    alt=\"\">\r\n            </div>\r\n        </router-link>\r\n        <section class=\"section\" id=\"app\">\r\n            <div class=\"content\">\r\n                <p class=\"title has-text-left  mb-2\">\r\n                    คำสั่งซื้อ ({{ sellerOrders.length }})\r\n                </p>\r\n                <hr />\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"row\" v-for=\"(order, index) in sellerOrders\" :key=\"index\">\r\n                            <div class=\"columns box\">\r\n                                <div class=\"column is-2 pt-5\">{{ getCustomerById(order.customerId) }}</div>\r\n                                <div class=\"column is-2 pt-5\">{{ order.date.slice(0, 10) }}</div>\r\n                                <div class=\"column box is-4\">\r\n                                    <div class=\"row\" v-for=\"(item, index) in order.type\" :key=\"index\">\r\n                                        <div class=\"column\">Product: {{ item.name }}<br />Size: {{ item.size\r\n                                        }}<br />Color: {{ item.color }}<br />Price: {{ item.price }} ฿</div>\r\n                                        <!-- <hr /> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"column is-2 pt-5\">รวม {{ order.sumPrice }} ฿</div>\r\n                                <div class=\"column is-2\">\r\n                                    <router-link class=\"has-text-dark\" id='button' to=\"/seller/customerdeatil\">\r\n                                        <button class=\"button has-background-black has-text-white\"\r\n                                            style=\"width: 150px; height: 40px;\">รายละเอียด</button>\r\n                                    </router-link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\n// import router from '@/router';\r\n\r\nimport axios from \"@/plugins/axios\";\r\nexport default {\r\n    name: \"app\",\r\n    props: [\"user\"],\r\n    data() {\r\n        return {\r\n            sellerId: \"\",\r\n            sellerOrders: [],\r\n            orders: [],\r\n            products: [],\r\n            customers: [],\r\n            orderWithProduct: [],\r\n            // paid: [],\r\n            // wait: [],\r\n            // ticket: [],\r\n            // cancleModal: false,\r\n            // ticketModal: false,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.getData()\r\n    },\r\n    methods: {\r\n        async getData() {\r\n            await axios\r\n                .get(`http://localhost:8002/getOrders`)\r\n                .then((res) => {\r\n                    this.orders = res.data\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.response.data.message)\r\n                });\r\n            await axios\r\n                .get(`http://localhost:8001/getProducts`)\r\n                .then((res) => {\r\n                    this.products = res.data\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.response.data.message)\r\n                });\r\n            await axios\r\n                .get(`http://localhost:8003/getCustomers`)\r\n                .then((res) => {\r\n                    this.customers = res.data\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.response.data.message)\r\n                });\r\n            this.filterOrders()\r\n            this.sellerId = localStorage.getItem(\"sellerId\")\r\n        },\r\n        filterOrders() {\r\n            // console.log(this.orders)\r\n            this.orders.forEach(order => {\r\n                this.products.forEach(product => {\r\n                    order.type.forEach(type => {\r\n                        if (type.productId == product._id) {\r\n                            type.productId = product\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            this.orders.forEach(order => {\r\n                order.type.forEach(type => {\r\n                    console.log(type.productId.sellerId)\r\n                    if(type.productId.sellerId == this.sellerId){\r\n                        console.log(type.productId.sellerId)\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        getCustomerById(id) {\r\n            var name\r\n            this.customers.forEach(item => {\r\n                if (item._id == id) {\r\n                    name = item.name\r\n                }\r\n            })\r\n            return name\r\n\r\n        }\r\n    }\r\n    // components: { router }\r\n};\r\n</script>\r\n<style>\r\n.btn1 {\r\n    width: 100%;\r\n}\r\n\r\n.arrow {\r\n    width: 30px;\r\n    height: 30px;\r\n    position: absolute;\r\n    top: -5%;\r\n    left: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}