{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/taifh/Desktop/SOP_Shopala/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"@/plugins/axios\";\nexport default {\n  name: \"app\",\n  props: [\"user\"],\n  data: function data() {\n    return {\n      customer: [],\n      order: [] // paid: [],\n      // wait: [],\n      // ticket: [],\n      // cancleModal: false,\n      // ticketModal: false,\n\n    };\n  },\n  mounted: function mounted() {\n    this.getOrderCustomer();\n  },\n  methods: {\n    getProduct: function getProduct() {\n      var _this = this;\n\n      axios.get(\"http://localhost:8001/getProducts\").then(function (res) {\n        _this.order.forEach(function (element) {\n          res.data.forEach(function (product) {\n            if (element.type[_this.order.type.length - 1].productId == product._id) {\n              element.type[_this.order.type.length - 1].productId = product;\n            }\n          });\n        });\n      }).catch(function (error) {\n        alert(error.response.data.message);\n      });\n    },\n    getOrderCustomer: function getOrderCustomer() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:8002/getOrders\").then(function (res) {\n                  _this2.order = res.data.filter(function (order) {\n                    return order.customerId == localStorage.getItem(\"customerId\");\n                  });\n                });\n\n              case 2:\n                _this2.getProduct();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    cancleOrder: function cancleOrder(item) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.post(\"http://localhost:8002/deleteOrder\", {\n                  \"_id\": item._id\n                }).then(function (res) {\n                  console.log(res);\n                });\n\n              case 2:\n                location.reload();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACAA,aADA;AAEAC,iBAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,kBADA;AAEAC,eAFA,CAGA;AACA;AACA;AACA;AACA;;AAPA;AASA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA,GAhBA;AAiBAC;AACAC,cADA,wBACA;AAAA;;AACAC,YACAC,GADA,sCAEAC,IAFA,CAEA;AACA;AACAC;AACA;AACAC;AACA;AACA,WAJA;AAKA,SANA;AAOA,OAVA,EAWAC,KAXA,CAWA;AACAC;AACA,OAbA;AAcA,KAhBA;AAiBAC,oBAjBA,8BAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAP,6CACAE,IADA,CACA;AACA;AACA;AACA,mBAFA;AAGA,iBALA,CADA;;AAAA;AAOA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KAzBA;AA0BAM,eA1BA,uBA0BAC,IA1BA,EA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAT;AACA;AADA,mBAGAE,IAHA,CAGA;AACAQ;AACA,iBALA,CADA;;AAAA;AAOAC;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAlCA;AAjBA","names":["name","props","data","customer","order","mounted","methods","getProduct","axios","get","then","res","element","catch","alert","getOrderCustomer","cancleOrder","item","console","location"],"sourceRoot":"src/views","sources":["CustomerMyOrder.vue"],"sourcesContent":["<template>\r\n    <div class=\"container is-widescreen\">\r\n        <router-link class=\"has-text-dark\" id='button' to=\"/\">\r\n            <div class=\"arrow\">\r\n                <img class=\"imgarrow\"\r\n                    src=\"https://cdn.discordapp.com/attachments/1033283242121498625/1055543133351448678/arrow-left.png\"\r\n                    alt=\"\">\r\n            </div>\r\n        </router-link>\r\n        <section class=\"section\" id=\"app\">\r\n            <div class=\"content\">\r\n                <p class=\"title has-text-left mb-2\">\r\n                    My Order\r\n                </p>\r\n                <hr />\r\n                <div class=\"columns is-multiline\">\r\n                    <div class=\"column is-4 mt-5\" v-for=\"(item, index) in order\" :key=\"index\">\r\n                        <div class=\"card\" id=\"card\">\r\n                            <div class=\"card-image pt-5\">\r\n                                <figure>\r\n                                    <!-- ไว้ใส่รูป -->\r\n                                    <img style=\" width: 150px; height: 237px;\"\r\n                                        :src=\"item.type[item.type.length-1].productId.photo\"\r\n                                        alt=\"\" />\r\n                                </figure>\r\n                            </div>\r\n                            <div class=\"card-content\">\r\n                                <div class=\"content\" style=\"height: 5px\">\r\n                                    รายการสั่งซื้อที่: {{ index + 1 }}</div>\r\n                                <div class=\"content\" style=\"height: 5px\" v-for=\"(ty, index1) in item.type\"\r\n                                    :key=\"index1\">\r\n                                    \"{{ ty.name }}\" {{ ty.size }} {{ ty.color }} {{ ty.price }} ฿</div>\r\n                                <div class=\"content\" style=\"height: 5px\">\r\n                                    ราคาสินค้าทั้งหมด: {{ item.sumPrice }} ฿</div>\r\n                                <div class=\"content\" style=\"height: 5px\">\r\n                                    วันที่: {{ item.date.slice(0, 10) }}</div>\r\n\r\n\r\n                            </div>\r\n                            <div class=\"columns card-content\">\r\n                                <!-- <button @click=\"linkOrder(wait.order_id)\"\r\n                                    class=\"card-footer-item  button is-black\">เพิ่มเติม</button> -->\r\n                                <button class=\"card-footer-item  button is-danger \"\r\n                                    @click=\"cancleOrder(item)\">ยกเลิกคำสั่งซื้อ</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"@/plugins/axios\";\r\nexport default {\r\n    name: \"app\",\r\n    props: [\"user\"],\r\n    data() {\r\n        return {\r\n            customer: [],\r\n            order: [],\r\n            // paid: [],\r\n            // wait: [],\r\n            // ticket: [],\r\n            // cancleModal: false,\r\n            // ticketModal: false,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.getOrderCustomer();\r\n    },\r\n    methods: {\r\n        getProduct() {\r\n            axios\r\n                .get(`http://localhost:8001/getProducts`)\r\n                .then((res) => {\r\n                    this.order.forEach(element => {\r\n                        res.data.forEach(product => {\r\n                            if(element.type[this.order.type.length-1].productId == product._id){\r\n                                element.type[this.order.type.length-1].productId = product\r\n                            }\r\n                        })\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.response.data.message)\r\n                });\r\n        },\r\n        async getOrderCustomer() {\r\n            await axios.get(`http://localhost:8002/getOrders`)\r\n                .then((res) => {\r\n                    this.order = res.data.filter(order => {\r\n                        return order.customerId == localStorage.getItem(\"customerId\")\r\n                    })\r\n                });\r\n                this.getProduct()\r\n        },\r\n        async cancleOrder(item) {\r\n            await axios.post(`http://localhost:8002/deleteOrder`, {\r\n                \"_id\": item._id\r\n            })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                });\r\n            location.reload()\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style>\r\n.card {\r\n    width: 100%;\r\n    background-color: rgb(197, 197, 197);\r\n    border-radius: 15px;\r\n    padding-top: 20px;\r\n\r\n}\r\n\r\n.arrow {\r\n    width: 30px;\r\n    height: 30px;\r\n    position: absolute;\r\n    top: -5%;\r\n    left: 0;\r\n}\r\n#card:hover{\r\n   box-shadow: 6px 6px rgb(133, 131, 131);\r\n   transform: scale(1.02);\r\n   transition: ease-out 0.5s;\r\n }\r\n</style>"]},"metadata":{},"sourceType":"module"}