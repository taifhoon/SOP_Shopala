{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/taifh/Desktop/SOP_Shopala/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import router from '@/router';\nimport axios from \"@/plugins/axios\";\nexport default {\n  name: \"app\",\n  props: [\"user\"],\n  data: function data() {\n    return {\n      selOrder: [],\n      customer: {} // customer: [],\n      // order: [],\n      // paid: [],\n      // wait: [],\n      // ticket: [],\n      // cancleModal: false,\n      // ticketModal: false,\n\n    };\n  },\n  mounted: function mounted() {\n    this.getCarts();\n  },\n  methods: {\n    calPrice: function calPrice(price, quantity) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"http://localhost:8005/cal\", {\n                  \"quantity\": quantity,\n                  \"price\": price\n                }).then(function (res) {\n                  result = res.data;\n                  console.log(res.data);\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 2:\n                console.log(result);\n                return _context.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getCarts: function getCarts() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost:8003/getCustomers\").then(function (res) {\n                  _this.customer = res.data.filter(function (item) {\n                    return item._id == localStorage.getItem(\"customerId\");\n                  })[0];\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 2:\n                _context2.next = 4;\n                return axios.get(\"http://localhost:8001/getProducts\").then(function (res) {\n                  _this.customer.cartList.forEach(function (item) {\n                    res.data.forEach(function (product) {\n                      if (product._id == item.productId) {\n                        item.productId = product;\n                      }\n                    });\n                  }); // this.product = res.data.filter(item => {\n                  //   return item._id == id\n                  // })[0]\n\n                }).catch(function (error) {\n                  alert(error.response.data.message);\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  } // components: { router }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AAEA;AACA;AACAA,aADA;AAEAC,iBAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,kBADA;AAEAC,kBAFA,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AATA;AAWA,GAfA;AAgBAC,SAhBA,qBAgBA;AACA;AACA,GAlBA;AAmBAC;AACAC,YADA,oBACAC,KADA,EACAC,QADA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,MACAC,IADA,8BACA;AACA,sCADA;AAEA;AAFA,iBADA,EAKAC,IALA,CAKA;AACAC;AACAC;AACA,iBARA,EASAC,KATA,CASA;AACAC;AACA,iBAXA,CAFA;;AAAA;AAcAF;AAdA,iDAeAD,MAfA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjBA;AAkBAI,YAlBA,sBAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAP,MACAQ,GADA,uCAEAN,IAFA,CAEA;AACA;AACA;AACA,mBAFA,EAEA,CAFA;AAGA,iBANA,EAOAG,KAPA,CAOA;AACAC;AACA,iBATA,CADA;;AAAA;AAAA;AAAA,uBAWAN,MACAQ,GADA,sCAEAN,IAFA,CAEA;AAEA;AACAO;AACA;AACAC;AACA;AACA,qBAJA;AAKA,mBANA,EAFA,CASA;AACA;AACA;;AACA,iBAdA,EAeAL,KAfA,CAeA;AACAC;AACA,iBAjBA,CAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AA/CA,GAnBA,CAqEA;;AArEA","names":["name","props","data","selOrder","customer","mounted","methods","calPrice","price","quantity","axios","post","then","result","console","catch","alert","getCarts","get","res","item"],"sourceRoot":"src/views","sources":["CustomerCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"container is-widescreen\">\r\n    <router-link class=\"has-text-dark\" id='button' to=\"/\">\r\n        <div class=\"arrow\">\r\n          <img class=\"imgarrow\"\r\n            src=\"https://cdn.discordapp.com/attachments/1033283242121498625/1055543133351448678/arrow-left.png\"\r\n            alt=\"\">\r\n        </div>\r\n      </router-link>\r\n    <section class=\"section\" id=\"app\">\r\n      <div class=\"content\">\r\n        <p class=\"title has-text-left  mb-2\">\r\n          My Cart\r\n        </p>\r\n        <hr />\r\n        <h1 class=\"is-size-4 has-text-left mb-6\">\r\n          ตะกร้าสินค้าของฉัน\r\n        </h1>\r\n        <div class=\"columns\">\r\n          <div class=\"column is-7\">\r\n            <div class=\"row\">\r\n              <div class=\"columns box\">\r\n                <div class=\"column is-4\">สินค้า</div>\r\n                <div class=\"column is-4\">รายละเอียด</div>\r\n                <div class=\"column is-2\">จำนวน</div>\r\n                <div class=\"column is-2\">ราคารวม</div>\r\n              </div>\r\n\r\n              <div class=\"columns box\" v-for=\"(item, index) in customer.cartList\" :key=\"index\">\r\n                <div class=\"column is-4\">\r\n                  <div class=\"row\">\r\n                    <div class=\"columns is-align-items-center\">\r\n                      <div class=\"column is-1\"><input type=\"checkbox\" v-model=\"selOrder\" /></div>\r\n                      <div class=\"column \"><img\r\n                          :src=\"item.productId.photo\"\r\n                          alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"column is-4\">{{ item.productId.name }}</div>\r\n                <div class=\"column is-2\">{{item.quantity}}</div>\r\n                <div class=\"column is-2\">{{ calPrice(item.price, item.quantity) }} ฿</div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"column is-1\"></div>\r\n          <div class=\"column is-4\">\r\n            <div class=\"box\">\r\n              <p class=\"title has-text-left  mb-5\">\r\n                สรุปคำสั่งซื้อ\r\n              </p>\r\n              <div class=\"columns\">\r\n                <p class=\"column has-text-left\">ราคาสินค้าทั้งหมด</p>\r\n                <p class=\"column has-text-right\">฿1500</p>\r\n              </div>\r\n              <div class=\"columns\">\r\n                <p class=\"column has-text-left\">การจัดส่ง</p>\r\n                <p class=\"column has-text-right\">ฟรี</p>\r\n              </div>\r\n              <div class=\"columns\">\r\n                <p class=\"column has-text-left\">รวม</p>\r\n                <p class=\"column has-text-right\">฿1500</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"has-text-centered \">\r\n              <router-link class=\"navbar-item\" to=\"/payment\">\r\n                <button class=\"button is-dark ordering btn1\">ชำระสินค้า</button>\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n<script>\r\n// import router from '@/router';\r\n\r\nimport axios from \"@/plugins/axios\";\r\nexport default {\r\n    name: \"app\",\r\n    props: [\"user\"],\r\n    data() {\r\n        return {\r\n          selOrder: [],\r\n          customer:{}\r\n        // customer: [],\r\n        // order: [],\r\n        // paid: [],\r\n        // wait: [],\r\n        // ticket: [],\r\n        // cancleModal: false,\r\n        // ticketModal: false,\r\n        };\r\n    },\r\n    mounted(){\r\n      this.getCarts()\r\n    },\r\n    methods:{\r\n      async calPrice(price, quantity){\r\n        var result\r\n        await axios\r\n        .post(`http://localhost:8005/cal`,{\r\n            \"quantity\":quantity,\r\n            \"price\":price\r\n        })\r\n        .then((res) => {\r\n          result = res.data\r\n          console.log(res.data)\r\n        })\r\n        .catch((error) => {\r\n          alert(error.response.data.message)\r\n        });\r\n        console.log(result)\r\n        return result\r\n      },\r\n      async getCarts(){\r\n        await axios\r\n        .get(`http://localhost:8003/getCustomers`)\r\n        .then((res) => {\r\n          this.customer = res.data.filter(item => {\r\n            return item._id == localStorage.getItem(\"customerId\")\r\n          })[0]\r\n        })\r\n        .catch((error) => {\r\n          alert(error.response.data.message)\r\n        });\r\n        await axios\r\n        .get(`http://localhost:8001/getProducts`)\r\n        .then((res) => {\r\n          \r\n          this.customer.cartList.forEach(item => {\r\n            res.data.forEach(product => {\r\n              if(product._id == item.productId){\r\n                item.productId = product\r\n              }\r\n            })\r\n          });\r\n          // this.product = res.data.filter(item => {\r\n          //   return item._id == id\r\n          // })[0]\r\n        })\r\n        .catch((error) => {\r\n          alert(error.response.data.message)\r\n        });\r\n      },\r\n      \r\n    }\r\n    // components: { router }\r\n};\r\n</script>\r\n<style>\r\n.btn1{\r\n  width: 100%;\r\n}\r\n.arrow {\r\n    width: 30px;\r\n    height: 30px;\r\n    position: absolute;\r\n    top: -5%;\r\n    left: 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}