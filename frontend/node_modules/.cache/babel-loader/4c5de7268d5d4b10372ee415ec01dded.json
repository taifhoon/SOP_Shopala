{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"@/plugins/axios\";\nimport { required, email, minLength, maxLength, sameAs } from \"vuelidate/lib/validators\";\n\nfunction mobile(value) {\n  return !!value.match(/0[0-9]{9}/);\n}\n\nfunction complexPassword(value) {\n  if (!(value.match(/[a-z]/) && value.match(/[A-Z]/) && value.match(/[0-9]/))) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default {\n  name: \"app\",\n  props: [\"user\"],\n  data: function data() {\n    return {\n      password: \"\",\n      confirm_password: \"\",\n      email: \"\",\n      mobile: \"\",\n      c_name: \"\"\n    };\n  },\n  mounted: function mounted() {},\n  computed: {},\n  methods: {\n    submit: function submit() {\n      this.$v;\n      axios.post(\"http://localhost:8003/createCustomer\", {\n        \"email\": this.email,\n        \"password\": this.confirm_password,\n        \"name\": this.c_name,\n        \"tel\": this.mobile\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (error) {\n        alert(error.response.data.message);\n      }); // // Validate all fields\n      // this.$v.$touch();\n      // // เช็คว่าในฟอร์มไม่มี error\n      // if (!this.$v.$invalid) {\n      //   let data = {\n      //     password: this.password,\n      //     confirm_password: this.confirm_password,\n      //     email: this.email,\n      //     mobile: this.mobile,\n      //     c_name: this.c_name,\n      //   };\n      //   axios\n      //     .post(\"http://localhost:3000/user/signup\", data)\n      //     .then((res) => {\n      //       console.log(res);\n      //       alert(\"Sign up Success\");\n      //       this.$router.push({ path: \"/user/login\" });\n      //     })\n      //     .catch((err) => {\n      //       alert(err.response.data.details.message);\n      //     });\n      // }\n    }\n  },\n  validations: {\n    email: {\n      required: required,\n      email: email\n    },\n    mobile: {\n      required: required,\n      mobile: mobile\n    },\n    password: {\n      required: required,\n      minLength: minLength(8),\n      complex: complexPassword\n    },\n    confirm_password: {\n      sameAs: sameAs(\"password\")\n    },\n    c_name: {\n      maxLength: maxLength(150),\n      required: required\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA,SACAA,QADA,EAEAC,KAFA,EAGAC,SAHA,EAIAC,SAJA,EAKAC,MALA,QAMA,0BANA;;AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACAC,aADA;AAEAC,iBAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,kBADA;AAEAC,0BAFA;AAGAR,eAHA;AAIAS,gBAJA;AAKAC;AALA;AAOA,GAXA;AAYAC,SAZA,qBAYA,EAZA;AAaAC,cAbA;AAcAC;AACAC,UADA,oBACA;AACA;AACAC;AACA,2BADA;AAEA,yCAFA;AAGA,2BAHA;AAIA;AAJA,SAMAC,IANA,CAMA;AACAC;AACA,OARA,EASAC,KATA,CASA;AACAC;AACA,OAXA,EAFA,CAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA,GAdA;AAuDAC;AACApB;AACAD,wBADA;AAEAC;AAFA,KADA;AAKAS;AACAV,wBADA;AAEAU;AAFA,KALA;AASAF;AACAR,wBADA;AAEAE,6BAFA;AAGAoB;AAHA,KATA;AAcAb;AACAL;AADA,KAdA;AAiBAO;AACAR,+BADA;AAEAH;AAFA;AAjBA;AAvDA","names":["required","email","minLength","maxLength","sameAs","name","props","data","password","confirm_password","mobile","c_name","mounted","computed","methods","submit","axios","then","console","catch","alert","validations","complex"],"sourceRoot":"src/views","sources":["Signup.vue"],"sourcesContent":["<template>\r\n  <section class=\"hero is-white\">\r\n    <div class=\"hero-body\">\r\n      <div class=\"container\">\r\n        <p class=\"title \">Sign-Up Customer</p>\r\n        <div class=\"columns is-centered\">\r\n          <div class=\"\r\n              column\r\n              is-5-tablet is-4-desktop is-3-widescreen\r\n              box\r\n              has-background-grey-light\r\n            \">\r\n            <div class=\"field\">\r\n              <label for=\"\" class=\"label\">Email</label>\r\n              <div class=\"control has-icons-left\">\r\n                <input v-model=\"$v.email.$model\" :class=\"{ 'is-danger': $v.email.$error }\" type=\"email\"\r\n                  placeholder=\"youremail@hotmail.com\" class=\"input\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                </span>\r\n              </div>\r\n              <template v-if=\"$v.email.$error\">\r\n                <p class=\"help is-danger\" v-if=\"!$v.email.required\">\r\n                  This field is required\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.email.email\">\r\n                  The email format is incorrect\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.email.minLength\">\r\n                  The name less be at much 5 letters\r\n                </p>\r\n              </template>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\" class=\"label\">Password</label>\r\n              <div class=\"control has-icons-left\">\r\n                <input v-model=\"$v.password.$model\" :class=\"{ 'is-danger': $v.email.$error }\" type=\"password\"\r\n                  placeholder=\"*******\" class=\"input\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                </span>\r\n              </div>\r\n              <template v-if=\"$v.password.$error\">\r\n                <p class=\"help is-danger\" v-if=\"!$v.password.required\">\r\n                  This field is required\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.password.minLength\">\r\n                  The password must be at least 8 letters\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.password.complexPassword\">\r\n                  The password is too easy\r\n                </p>\r\n              </template>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\" class=\"label\">confirm Password</label>\r\n              <div class=\"control has-icons-left\">\r\n                <input v-model=\"$v.confirm_password.$model\" :class=\"{ 'is-danger': $v.confirm_password.$error }\"\r\n                  type=\"password\" placeholder=\"*******\" class=\"input\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                </span>\r\n              </div>\r\n              <template v-if=\"$v.confirm_password.$error\">\r\n                <p class=\"help is-danger\" v-if=\"!$v.confirm_password.sameAs\">\r\n                  This password not match\r\n                </p>\r\n              </template>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\" class=\"label\">Name</label>\r\n              <div class=\"control has-icons-left\">\r\n                <input v-model=\"$v.c_name.$model\" :class=\"{ 'is-danger': $v.c_name.$error }\" type=\"name\"\r\n                  placeholder=\"Firstname  Lastname\" class=\"input\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                </span>\r\n              </div>\r\n              <template v-if=\"$v.c_name.$error\">\r\n                <p class=\"help is-danger\" v-if=\"!$v.c_name.maxLength\">\r\n                  The name must be at much 150 letters\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.c_name.required\">\r\n                  This field is required\r\n                </p>\r\n              </template>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\" class=\"label\">Phonenumber</label>\r\n              <div class=\"control has-icons-left\">\r\n                <input v-model=\"$v.mobile.$model\" :class=\"{ 'is-danger': $v.mobile.$error }\" type=\"phonenumber\"\r\n                  placeholder=\"xxx-xxx-xxxx\" class=\"input\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                </span>\r\n              </div>\r\n              <template v-if=\"$v.mobile.$error\">\r\n                <p class=\"help is-danger\" v-if=\"!$v.mobile.required\">\r\n                  This field is required\r\n                </p>\r\n                <p class=\"help is-danger\" v-if=\"!$v.mobile.mobile\">\r\n                  Invalid Mobile Number\r\n                </p>\r\n              </template>\r\n            </div>\r\n            <div class=\"field\">\r\n              <button class=\"button has-background-black\">\r\n                <strong class=\"has-text-white\" @click=\"submit()\">Sign up</strong>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p class=\"my-3\">Already have an account? \r\n            <router-link to=\"/user/login\">\r\n              <a>Login</a>\r\n            </router-link>\r\n          </p>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"@/plugins/axios\";\r\nimport {\r\n  required,\r\n  email,\r\n  minLength,\r\n  maxLength,\r\n  sameAs,\r\n} from \"vuelidate/lib/validators\";\r\n\r\nfunction mobile(value) {\r\n  return !!value.match(/0[0-9]{9}/);\r\n}\r\n\r\nfunction complexPassword(value) {\r\n  if (!(value.match(/[a-z]/) && value.match(/[A-Z]/) && value.match(/[0-9]/))) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default {\r\n  name: \"app\",\r\n  props: [\"user\"],\r\n  data() {\r\n    return {\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      c_name: \"\",\r\n    };\r\n  },\r\n  mounted() { },\r\n  computed: {},\r\n  methods: {\r\n    submit() {\r\n      this.$v\r\n      axios.post(\"http://localhost:8003/createCustomer\", {\r\n        \"email\": this.email,\r\n        \"password\": this.confirm_password,\r\n        \"name\": this.c_name,\r\n        \"tel\": this.mobile\r\n      })\r\n      .then((res) => {\r\n          console.log(res)\r\n        })\r\n        .catch((error) => {\r\n          alert(error.response.data.message)\r\n        });\r\n      // // Validate all fields\r\n      // this.$v.$touch();\r\n\r\n      // // เช็คว่าในฟอร์มไม่มี error\r\n      // if (!this.$v.$invalid) {\r\n      //   let data = {\r\n      //     password: this.password,\r\n      //     confirm_password: this.confirm_password,\r\n      //     email: this.email,\r\n      //     mobile: this.mobile,\r\n      //     c_name: this.c_name,\r\n      //   };\r\n\r\n      //   axios\r\n      //     .post(\"http://localhost:3000/user/signup\", data)\r\n      //     .then((res) => {\r\n      //       console.log(res);\r\n      //       alert(\"Sign up Success\");\r\n      //       this.$router.push({ path: \"/user/login\" });\r\n      //     })\r\n      //     .catch((err) => {\r\n      //       alert(err.response.data.details.message);\r\n      //     });\r\n      // }\r\n    },\r\n  },\r\n  validations: {\r\n    email: {\r\n      required: required,\r\n      email,\r\n    },\r\n    mobile: {\r\n      required: required,\r\n      mobile: mobile,\r\n    },\r\n    password: {\r\n      required: required,\r\n      minLength: minLength(8),\r\n      complex: complexPassword,\r\n    },\r\n    confirm_password: {\r\n      sameAs: sameAs(\"password\"),\r\n    },\r\n    c_name: {\r\n      maxLength: maxLength(150),\r\n      required: required,\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}